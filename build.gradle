plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	//geckolib
	maven {
		url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
	}

	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}

	// Cloth config api for custom configs
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }

	// LlamaLad7's MixinExtras
	maven { url 'https://jitpack.io' }

	// cursemaven
	maven {
		url "https://cursemaven.com"
	}
	repositories {
		maven {
			name = "CottonMC"
			url = "https://server.bbkr.space/artifactory/libs-release"
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation 'software.bernie.geckolib:geckolib-fabric-1.18:3.0.33'

	// Cloth config api for custom configs
	modApi("me.shedaniel.cloth:cloth-config-fabric:6.4.90") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	// Adds a dependency on the base cardinal components module (required by every other module)
	// Replace modImplementation with modApi if you expose components in your own API
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cardinal_components_version}"
	// Adds a dependency on a specific module
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-item:${project.cardinal_components_version}"

	// LlamaLad7's MixinExtras
	include(annotationProcessor(implementation("com.github.LlamaLad7:MixinExtras:0.1.1")))

	// Revive mod
	modImplementation "curse.maven:revive-533879:3745883"

	// Dehydration mod
	modImplementation "curse.maven:dehydration-410830:3786010"

	// LibGui
	dependencies {
		modImplementation include("io.github.cottonmc:LibGui:5.4.2+1.18.2")
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
